* 创建版本库
创建一个空目录，使用 git init命令初始化，会生成一个.git目录（默认是隐藏，用ls -ah查看）。
* 查看状态
git status 查看工作区的状态
git diff 查看修改内容
* 版本管理
git log 查看修改记录，显示提交日志。 --pretty=oneline 可以当行显示，减少输出信息。
git reflog 查看历史命令
git reset --hard  commitid 回退版本 ，commmitid只需要输入前几位。
git reset head file 将暂存区的修改撤销，重新放回工作区
git add filename  把文件修改保存到暂存区
git commit -m  把暂存区的所有内容提交到当前分支。
git checkout -- file 可以丢弃工作区的修改，回到最近一次git commit或git add时的状态。
git checkout 用版本库里的版本替换工作区的版本。
git rm + git commit -m “message”  从版本库删除文件 

git中head表示当前版本，上一个版本是head^，上上个版本是head^^，上100个版本是head^100。
git工作区（本地目录）有一个隐藏目录.git，这是版本库（Repository），版本库里有暂存区（stage或index）。
* 远程仓库
设置github远程仓库：
a、创建SSH key。ssh-keygen -t rsa -C “address@mail.com” 。本地仓库和github仓库是通过ssh加密的。看主目录下.ssh目录下是否存在id_rsa和id_rsa.pub文件。
b、登录github，打开“Account setting”，“SSH Keys”页面，点击“Add SSH Key”，填上任意title，在key文本里粘贴id_rsa.pub文件的内容。点击“Add key”完成。

本地关联远程仓库：
a、登录github，找到“create a new repo”，点击“create repository”创建新的仓库。
b、本地输入 git remote add origin git@github.com：账户名/项目名.git
c、用git push推送本地库的内容到远程，加上-u，将本地分支和远程分支关联。

克隆远程库：
a、登录github，创建一个新的仓库。勾选Initialize this repository with a README自动创建README.md文件。
b、git clone 克隆一个本地库。
* 分支管理
git中head是指向当前分支，master指向提交的。
git无法自动合并分支时，需要解决冲突后再提交。

git checkout -b <name>  创建并切换分支。
git checkout  <name>  切换分支。
git branch -a 查看所有分支，*代表当前分支。
git branch <name> 创建分支
git merge <name> 合并指定分支到当前分支。
git merge --no-ff <name>  禁用fast forward模式。
git branch -d <name> 删除分支
git log --graph 查看分支合并图
git stash 保存工作现场
git stash list 查看工作现场内容
git stash apply 恢复工作现场
git stash drop 删除stash内容
git stash pop 恢复并删除stash内容
git remote -v 查看远程库信息
git push origin <name>  推送本地分支
git pull 抓取远程分支
git branch --set—upstream dev origin/dev 设置链接
* 标签管理
git tag <tagname>  commitid -m “” 给某一个版本打标签并制定标签信息
git tag 查看所有标签
git show <tagname> 查看标签信息
git tag -d <tagname> 删除本地标签信息
git push origin <tagname> 推送某个标签到远程。
git push origin ：refs/tags/<tagname> 推送某个标签到远程。
